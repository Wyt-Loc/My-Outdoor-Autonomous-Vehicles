C51 COMPILER V9.54   UART                                                                  05/19/2022 15:55:21 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "uart.h"
   2          
   3          char idata gpsRxBuffer[gpsRxBufferLength];
   4          unsigned char RX_Count = 0;
   5          _SaveData Save_Data;
   6          
   7          void Uart_Init()                     
   8          {
   9   1        SCON = 0X50;  //UART方式1；8位UART
  10   1        REN  = 1;     //允许串行口接收数据
  11   1        PCON = 0x00;  //SMOD=0;波特率不加倍
  12   1        TMOD = 0x20;  //T1方式2，用于产生波特率
  13   1        TH1  = 0xFD;  //装初值
  14   1        TL1  = 0xFD;
  15   1        TR1  = 1;     //启动定时器1
  16   1        EA   = 1;     //打开全局中断控制
  17   1        ES   = 1;     //打开串行口中断  
  18   1      }
  19          
  20          void UartPrintf(unsigned char *p)       //发送字符串
  21          { 
  22   1        while(*p)
  23   1        {
  24   2          SBUF=*(p++);
  25   2          while(TI==0)
  26   2          {
  27   3      
  28   3          };
  29   2          TI=0;
  30   2        }   
  31   1      }
  32          
  33          void UartPrintASCII(unsigned char c)        //发送一个字符
  34          { 
  35   1          TI=0;   
  36   1          SBUF=c;   
  37   1          while(TI==0);   
  38   1          TI=0;   
  39   1      }
  40          
  41          
  42          void RECEIVE_DATA(void) interrupt 4 using 3       
  43          { 
  44   1        unsigned char temp = 0;
  45   1        char i = 0;
  46   1        ES=0;
  47   1        temp = SBUF;
  48   1        RI = 0;
  49   1        
  50   1        if(temp == '$')
  51   1        {
  52   2          RX_Count = 0; 
  53   2        }
  54   1          
  55   1        if(RX_Count <= 5)
C51 COMPILER V9.54   UART                                                                  05/19/2022 15:55:21 PAGE 2   

  56   1        {
  57   2           gpsRxBuffer[RX_Count++] = temp;
  58   2        }
  59   1        else if(gpsRxBuffer[0] == '$' &gpsRxBuffer[4] == 'M' && gpsRxBuffer[5] == 'C')      //确定是否收到"GPRMC/GNR
             -MC"这一帧数据
  60   1        {
  61   2          gpsRxBuffer[RX_Count++] = temp;
  62   2          if(temp == '\n')                     
  63   2          {
  64   3            memset(Save_Data.GPS_Buffer, 0, GPS_Buffer_Length);      //清空
  65   3            memcpy(Save_Data.GPS_Buffer, gpsRxBuffer, RX_Count);  //保存数据
  66   3            Save_Data.isGetData = true;
  67   3            RX_Count = 0;
  68   3            memset(gpsRxBuffer, 0, gpsRxBufferLength);      //清空        
  69   3          }
  70   2          
  71   2          if(RX_Count >= 75)
  72   2          {
  73   3            RX_Count = 75;
  74   3            gpsRxBuffer[RX_Count] = '\0';//添加结束符
  75   3          }     
  76   2        }
  77   1        ES=1; 
  78   1      }
  79          
  80          void clrStruct()
  81          {
  82   1        Save_Data.isGetData = false;
  83   1        Save_Data.isParseData = false;
  84   1        Save_Data.isUsefull = false;
  85   1        memset(Save_Data.GPS_Buffer, 0, GPS_Buffer_Length);      //清空
  86   1        memset(Save_Data.UTCTime, 0, UTCTime_Length);
  87   1        memset(Save_Data.latitude, 0, latitude_Length);
  88   1        memset(Save_Data.N_S, 0, N_S_Length);
  89   1        memset(Save_Data.longitude, 0, longitude_Length);
  90   1        memset(Save_Data.E_W, 0, E_W_Length);
  91   1        
  92   1      }
  93          
  94          
  95          
  96          
  97          
  98          
  99          
 100          
 101          
 102          
 103          
 104          
 105          
 106          
 107          
 108          
 109          
 110          
 111          
 112          
 113          
 114          
 115          
 116          
C51 COMPILER V9.54   UART                                                                  05/19/2022 15:55:21 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    355    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    121    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       4
   IDATA SIZE       =     76    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
